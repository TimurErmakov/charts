[{"/Users/timurermakov/Desktop/charts/charts/charts/src/index.tsx":"1","/Users/timurermakov/Desktop/charts/charts/charts/src/App.tsx":"2","/Users/timurermakov/Desktop/charts/charts/charts/src/store/reducers/index.ts":"3","/Users/timurermakov/Desktop/charts/charts/charts/src/store/selectors/index.ts":"4","/Users/timurermakov/Desktop/charts/charts/charts/src/types/store.ts":"5","/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/index.ts":"6","/Users/timurermakov/Desktop/charts/charts/charts/src/components/ControlPanel/index.ts":"7","/Users/timurermakov/Desktop/charts/charts/charts/src/components/FileUploadZone/index.ts":"8","/Users/timurermakov/Desktop/charts/charts/charts/src/components/ControlPanel/ControlPanel.tsx":"9","/Users/timurermakov/Desktop/charts/charts/charts/src/components/FileUploadZone/FileUploadZone.tsx":"10","/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/Chart.tsx":"11","/Users/timurermakov/Desktop/charts/charts/charts/src/utils/parser.ts":"12","/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/charts/RadarChart.tsx":"13","/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/charts/XYChart.tsx":"14","/Users/timurermakov/Desktop/charts/charts/charts/src/enums/dataset.ts":"15","/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/charts/PieChart.tsx":"16","/Users/timurermakov/Desktop/charts/charts/charts/src/store/actions/index.ts":"17","/Users/timurermakov/Desktop/charts/charts/charts/src/utils/dictionary.ts":"18","/Users/timurermakov/Desktop/charts/charts/charts/src/constants/configs.ts":"19","/Users/timurermakov/Desktop/charts/charts/charts/src/constants/options.ts":"20","/Users/timurermakov/Desktop/charts/charts/charts/src/hooks/useWebWorker.ts":"21"},{"size":421,"mtime":1613826459574,"results":"22","hashOfConfig":"23"},{"size":850,"mtime":1613826451039,"results":"24","hashOfConfig":"23"},{"size":816,"mtime":1613826544768,"results":"25","hashOfConfig":"23"},{"size":464,"mtime":1613826548643,"results":"26","hashOfConfig":"23"},{"size":1204,"mtime":1613826551920,"results":"27","hashOfConfig":"23"},{"size":35,"mtime":1613826472390,"results":"28","hashOfConfig":"23"},{"size":42,"mtime":1613826485378,"results":"29","hashOfConfig":"23"},{"size":44,"mtime":1613826490890,"results":"30","hashOfConfig":"23"},{"size":2990,"mtime":1613826482672,"results":"31","hashOfConfig":"23"},{"size":6630,"mtime":1613834762885,"results":"32","hashOfConfig":"23"},{"size":1217,"mtime":1613826469956,"results":"33","hashOfConfig":"23"},{"size":650,"mtime":1613831236758,"results":"34","hashOfConfig":"23"},{"size":1443,"mtime":1613826477507,"results":"35","hashOfConfig":"23"},{"size":1436,"mtime":1613826479781,"results":"36","hashOfConfig":"23"},{"size":673,"mtime":1613826499887,"results":"37","hashOfConfig":"23"},{"size":1202,"mtime":1613826474621,"results":"38","hashOfConfig":"23"},{"size":660,"mtime":1613826540868,"results":"39","hashOfConfig":"23"},{"size":797,"mtime":1613826558605,"results":"40","hashOfConfig":"23"},{"size":2262,"mtime":1613826494058,"results":"41","hashOfConfig":"23"},{"size":1432,"mtime":1613826496887,"results":"42","hashOfConfig":"23"},{"size":934,"mtime":1613835415168,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1fz5g8w",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"/Users/timurermakov/Desktop/charts/charts/charts/src/index.tsx",[],["91","92","93","94","95","96","97"],"/Users/timurermakov/Desktop/charts/charts/charts/src/App.tsx",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/store/reducers/index.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/store/selectors/index.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/types/store.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/index.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/components/ControlPanel/index.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/components/FileUploadZone/index.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/components/ControlPanel/ControlPanel.tsx",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/components/FileUploadZone/FileUploadZone.tsx",["98","99","100","101","102"],"import { Button, Card, Dialog, FormLabel, Typography } from '@material-ui/core';\nimport React, {\n  DragEvent,\n  FC,\n  useState,\n  useRef,\n  useCallback,\n  ChangeEvent,\n  useMemo,\n  MouseEvent,\n  useEffect,\n} from 'react';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch } from 'react-redux';\nimport { FieldNames } from '../../enums/dataset';\nimport { setData, setIsDataLoaded } from '../../store/actions';\nimport { useWebWorker } from '../../hooks/useWebWorker';\nimport { parser } from '../../utils/parser';\n\ninterface UseStylesProps {\n  isDragEnter?: boolean;\n}\n\nconst useStyles = makeStyles(theme => ({\n  dialogPaper: {\n    backgroundColor: theme.palette.background.default,\n    padding: '20px 30px',\n  },\n  fileInput: {\n    visibility: 'hidden',\n    '&:focus + label': {\n      border: `2px solid ${theme.palette.secondary.main}`,\n    },\n  },\n  label: {\n    position: 'relative',\n    minHeight: 160,\n    width: 400,\n    padding: '16px 16px 100px',\n    marginBottom: 24,\n    border: ({ isDragEnter }: UseStylesProps) =>\n      isDragEnter\n        ? `2px solid ${theme.palette.secondary.main}`\n        : `2px dashed ${theme.palette.divider}`,\n    borderRadius: 4,\n    '& > div': {\n      pointerEvents: ({ isDragEnter }: UseStylesProps) => (isDragEnter ? 'none' : 'auto'),\n    },\n  },\n  icon: {\n    fontSize: 40,\n  },\n  iconContainer: {\n    marginTop: 20,\n    textAlign: 'center',\n    margin: '0 auto',\n  },\n  buttonContainer: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  button: {\n    width: 100,\n    '&:not(:last-child)': {\n      marginRight: 15,\n    },\n  },\n  fileCard: {\n    display: 'flex',\n    alignItems: 'center',\n    height: 60,\n    backgroundColor: theme.palette.primary.main,\n  },\n  fileNameContainer: {\n    marginLeft: 20,\n  },\n  fileName: {\n    color: theme.palette.common.white,\n  },\n}));\n\nconst FileUploadZone: FC = () => {\n  const classes = useStyles({});\n  const dispatch = useDispatch();\n\n  const [open, setOpen] = useState(true);\n  const [isDragEnter, setIsDragEnter] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [file, setFile] = useState<File | null>(null);\n  const { result, run } = useWebWorker(parser);\n\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n  const dialogClasses = useMemo(\n    () => ({\n      paper: classes.dialogPaper,\n    }),\n    [classes],\n  );\n\n  useEffect(() => {\n    if (!result) {\n      return;\n    }\n\n    dispatch(setData(result));\n    dispatch(setIsDataLoaded(true));\n  }, [dispatch, result]);\n\n  const clearFileInput = useCallback(() => {\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }, []);\n\n  const onDragEnter = useCallback((e: DragEvent<HTMLLabelElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    setIsDragEnter(true);\n  }, []);\n\n  const onDragOver = useCallback((e: DragEvent<HTMLLabelElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n\n  const onDragLeaveHandler = useCallback((e: DragEvent<HTMLLabelElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.target === e.currentTarget) {\n      setIsDragEnter(false);\n    }\n  }, []);\n\n  const onDropFile = useCallback((e: DragEvent<HTMLLabelElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    setIsDragEnter(false);\n\n    const dt = e.dataTransfer;\n  }, []);\n\n  const onFileInputChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const { files } = e.target;\n\n    if (files) {\n      setFile(files[0]);\n    }\n  }, []);\n\n  const onBrowseButtonClick = useCallback(e => {\n    e.preventDefault();\n\n    fileInputRef?.current?.click();\n  }, []);\n\n  const onClearClick = useCallback(\n    e => {\n      e.preventDefault();\n\n      setFile(null);\n      clearFileInput();\n    },\n    [clearFileInput],\n  );\n\n  const onUploadFile = useCallback(\n    async (event: MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n\n      if (!file) {\n        return;\n      }\n\n      const reader = new FileReader();\n\n      reader.onload = async (e: any) => {\n        const text = e.target.result;\n\n        const headers = Object.keys(FieldNames);\n        run({ text, headers });\n      };\n\n      reader.readAsText(file);\n    },\n    [file, run],\n  );\n\n  const onPreventClick = (e: MouseEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const renderFileCard = (fileName: string) => {\n    return (\n      <div className={classes.fileNameContainer}>\n        <div>\n          <Typography className={classes.fileName}>{fileName}</Typography>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <Dialog classes={dialogClasses} open={open}>\n      <input\n        disabled={!!file}\n        className={classes.fileInput}\n        id=\"document-upload\"\n        multiple={false}\n        ref={fileInputRef}\n        type=\"file\"\n        onChange={onFileInputChange}\n      />\n      <FormLabel\n        disabled={!!file}\n        className={classes.label}\n        data-test=\"file-upload-zone__dropzone\"\n        htmlFor=\"document-upload\"\n        onDragEnter={onDragEnter}\n        onDragLeave={onDragLeaveHandler}\n        onDragOver={onDragOver}\n        onDrop={onDropFile}\n      >\n        {file && (\n          <Card className={classes.fileCard} elevation={2} onClick={onPreventClick}>\n            {renderFileCard(file.name)}\n          </Card>\n        )}\n        <div className={classes.iconContainer}>\n          <PublishIcon className={classes.icon} />\n          <Typography>Chose File</Typography>\n        </div>\n      </FormLabel>\n      <div className={classes.buttonContainer}>\n        <Button\n          className={classes.button}\n          data-test=\"file-upload-zone__browse-button\"\n          disabled={isUploading}\n          size=\"small\"\n          variant=\"contained\"\n          onClick={onBrowseButtonClick}\n        >\n          Browse\n        </Button>\n        <div>\n          <Button\n            className={classes.button}\n            data-test=\"file-upload-zone__clear-button\"\n            disabled={!file || isUploading}\n            variant=\"contained\"\n            onClick={onClearClick}\n          >\n            Clear\n          </Button>\n          <Button\n            className={classes.button}\n            color=\"primary\"\n            data-test=\"file-upload-zone__upload-button\"\n            disabled={!file || isUploading}\n            type=\"button\"\n            variant=\"contained\"\n            onClick={onUploadFile}\n          >\n            Upload\n          </Button>\n        </div>\n      </div>\n    </Dialog>\n  );\n};\n\nexport default FileUploadZone;\n","/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/Chart.tsx",["103","104","105"],"import React, { FC, useMemo, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport { selectChartType, selectData, selectFieldName } from '../../store/selectors';\nimport { Charts } from '../../enums/dataset';\nimport PieChart from './charts/PieChart';\nimport XYChart from './charts/XYChart';\nimport RadarChart from './charts/RadarChart';\n\nam4core.useTheme(am4themes_animated);\n\nconst Chart: FC = () => {\n  const data = useSelector(selectData)!;\n  const fieldName = useSelector(selectFieldName)!;\n  const chartType = useSelector(selectChartType)!;\n\n  const chartProps = useMemo(\n    () => ({\n      data,\n      fieldName,\n    }),\n    [data, fieldName],\n  );\n\n  const renderChart = useCallback(() => {\n    switch (chartType) {\n      case Charts.PieChart:\n        return <PieChart {...chartProps} />;\n\n      case Charts.XYChart:\n        return <XYChart {...chartProps} />;\n\n      case Charts.RadarChart:\n        return <RadarChart {...chartProps} />;\n\n      default:\n        return null;\n    }\n  }, [chartType, chartProps]);\n\n  return renderChart();\n};\n\nexport default Chart;\n","/Users/timurermakov/Desktop/charts/charts/charts/src/utils/parser.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/charts/RadarChart.tsx",["106","107"],"import React, { FC, useRef, useLayoutEffect } from 'react';\nimport * as am4core from '@amcharts/amcharts4/core';\nimport * as am4charts from '@amcharts/amcharts4/charts';\nimport am4themes_animated from '@amcharts/amcharts4/themes/animated';\nimport { DataModel } from '../../../types/store';\nimport { FieldNames } from '../../../enums/dataset';\nimport { getData } from '../../../utils/dictionary';\n\nam4core.useTheme(am4themes_animated);\n\ninterface ChartProps {\n  data: DataModel[];\n  fieldName: FieldNames;\n}\n\nconst RadarChart: FC<ChartProps> = ({ data, fieldName }) => {\n  const chartRef = useRef<am4charts.RadarChart | null>(null);\n\n  useLayoutEffect(() => {\n    if (!fieldName) {\n      return;\n    }\n\n    const chart = am4core.create('chartdiv', am4charts.RadarChart);\n\n    const parsedData = getData(data, fieldName);\n\n    chart.data = parsedData;\n    const categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis() as any);\n    categoryAxis.dataFields.category = 'category';\n\n    chart.yAxes.push(new am4charts.ValueAxis() as any);\n\n    /* Create and configure series */\n    const series = chart.series.push(new am4charts.RadarSeries());\n    series.dataFields.valueY = 'value';\n    series.dataFields.categoryX = 'category';\n\n    chartRef.current = chart;\n\n    return () => {\n      chart.dispose();\n    };\n  }, [data, fieldName]);\n\n  return <div id=\"chartdiv\" style={{ width: '100%', height: '500px' }} />;\n};\n\nexport default RadarChart;\n","/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/charts/XYChart.tsx",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/enums/dataset.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/components/Charts/charts/PieChart.tsx",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/store/actions/index.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/utils/dictionary.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/constants/configs.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/constants/options.ts",[],"/Users/timurermakov/Desktop/charts/charts/charts/src/hooks/useWebWorker.ts",["108","109","110","111"],"import { useCallback, useEffect, useRef, useState } from 'react';\n\nconst workerHandler = (fn: (props: any) => any) => {\n  // eslint-disable-next-line no-param-reassign\n  onmessage = (e: MessageEvent) => {\n    const result = fn(e.data);\n    console.log(result);\n    postMessage(result, e.origin);\n  };\n};\n\ninterface UseWebWorker<T, P> {\n  result: T | null;\n  run: (value: P) => void;\n}\n\nexport const useWebWorker = <T, P>(fn: (props: P) => T): UseWebWorker<T, P> => {\n  const [result, setResult] = useState<T | null>(null);\n\n  const workerRef = useRef<Worker | null>(null);\n\n  useEffect(() => {\n    const worker = new Worker('/../workers/parser.worker.ts');\n    workerRef.current = worker;\n\n    worker.onmessage = e => setResult(e.data);\n\n    return () => {\n      worker.terminate();\n    };\n  }, [fn]);\n\n  const run = useCallback(props => {\n    workerRef.current?.postMessage(props);\n  }, []);\n\n  return {\n    result,\n    run,\n  };\n};\n",{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":87,"column":16,"nodeType":"128","messageId":"129","endLine":87,"endColumn":23},{"ruleId":"126","severity":1,"message":"130","line":88,"column":10,"nodeType":"128","messageId":"129","endLine":88,"endColumn":21},{"ruleId":"126","severity":1,"message":"131","line":89,"column":23,"nodeType":"128","messageId":"129","endLine":89,"endColumn":37},{"ruleId":"126","severity":1,"message":"132","line":144,"column":11,"nodeType":"128","messageId":"129","endLine":144,"endColumn":13},{"ruleId":"133","severity":1,"message":"134","line":181,"column":33,"nodeType":"135","messageId":"136","endLine":181,"endColumn":36,"suggestions":"137"},{"ruleId":"138","severity":1,"message":"139","line":14,"column":16,"nodeType":"140","messageId":"141","endLine":14,"endColumn":40},{"ruleId":"138","severity":1,"message":"139","line":15,"column":21,"nodeType":"140","messageId":"141","endLine":15,"endColumn":50},{"ruleId":"138","severity":1,"message":"139","line":16,"column":21,"nodeType":"140","messageId":"141","endLine":16,"endColumn":50},{"ruleId":"133","severity":1,"message":"134","line":29,"column":75,"nodeType":"135","messageId":"136","endLine":29,"endColumn":78,"suggestions":"142"},{"ruleId":"133","severity":1,"message":"134","line":32,"column":51,"nodeType":"135","messageId":"136","endLine":32,"endColumn":54,"suggestions":"143"},{"ruleId":"126","severity":1,"message":"144","line":3,"column":7,"nodeType":"128","messageId":"129","endLine":3,"endColumn":20},{"ruleId":"133","severity":1,"message":"134","line":3,"column":36,"nodeType":"135","messageId":"136","endLine":3,"endColumn":39,"suggestions":"145"},{"ruleId":"133","severity":1,"message":"134","line":3,"column":44,"nodeType":"135","messageId":"136","endLine":3,"endColumn":47,"suggestions":"146"},{"ruleId":"147","severity":1,"message":"148","line":7,"column":5,"nodeType":"149","messageId":"150","endLine":7,"endColumn":16},"jest/no-try-expect",["151"],"jsx-a11y/accessible-emoji",[],"lines-around-directive",["152"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'setOpen' is assigned a value but never used.","Identifier","unusedVar","'isDragEnter' is assigned a value but never used.","'setIsUploading' is assigned a value but never used.","'dt' is assigned a value but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["153","154"],"@typescript-eslint/no-non-null-assertion","Forbidden non-null assertion.","TSNonNullExpression","noNonNull",["155","156"],["157","158"],"'workerHandler' is assigned a value but never used.",["159","160"],["161","162"],"no-console","Unexpected console statement.","MemberExpression","unexpected","no-conditional-expect","padding-line-between-statements",{"messageId":"163","fix":"164","desc":"165"},{"messageId":"166","fix":"167","desc":"168"},{"messageId":"163","fix":"169","desc":"165"},{"messageId":"166","fix":"170","desc":"168"},{"messageId":"163","fix":"171","desc":"165"},{"messageId":"166","fix":"172","desc":"168"},{"messageId":"163","fix":"173","desc":"165"},{"messageId":"166","fix":"174","desc":"168"},{"messageId":"163","fix":"175","desc":"165"},{"messageId":"166","fix":"176","desc":"168"},"suggestUnknown",{"range":"177","text":"178"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"177","text":"179"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"180","text":"178"},{"range":"180","text":"179"},{"range":"181","text":"178"},{"range":"181","text":"179"},{"range":"182","text":"178"},{"range":"182","text":"179"},{"range":"183","text":"178"},{"range":"183","text":"179"},[4109,4112],"unknown","never",[924,927],[1032,1035],[102,105],[110,113]]